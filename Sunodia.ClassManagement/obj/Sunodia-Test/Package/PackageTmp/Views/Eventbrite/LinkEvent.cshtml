@model Sunodia.ClassManagement.Models.LinkEventsViewModel

@{
    ViewBag.Title = "Link Events";
    var linkWord = "link";
    var buttonWord = "Link Event";
    if (ViewBag.AlreadyLinked)
    {
        linkWord = "un-link";
        buttonWord = "Un-Link Event";
    }
}

<h2>@buttonWord</h2>
<h3>Are you sure you want to @linkWord this event?</h3>
<div>
    <h4>@Model.Event.NickName</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.EventbriteName)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.EventbriteName)
        </dd>

        <dt>
            
            @Html.DisplayNameFor(model => model.EventbriteDates)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.EventbriteDates)

        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.EventbriteVenue)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.EventbriteVenue)
        </dd>

</dl>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Event.Id)
        @Html.HiddenFor(model => model.EventbriteId)
        <input id="AlreadyLinked"  name="AlreadyLinked" type="hidden" value=@ViewBag.AlreadyLinked.ToString() />
        <div class="form-actions no-color">
            <input type="submit" value=@buttonWord class="btn btn-default" /> |
            @Html.ActionLink("Cancel", "Index", new { eventId = @Model.Event.Id })
        </div>
    }
</div>
